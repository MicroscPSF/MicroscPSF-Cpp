# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Compile and test C++

on:
  push:
    branches: [ main ]
  pull_request:
    types: [edited, submitted]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-20.04, ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-20.04, ubuntu-latest, windows-latest]

    steps:
    - name: Fetch sources
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: pip

    - name: Install gcc toolchain
      run: >-
        sudo apt-get install
        build-essential
        libopenblas-dev
      if: startsWith(matrix.os, 'ubuntu') == true

    - name: Install Python dependencies
      run: |
        pip install --upgrade uv
        uv pip install --system meson ninja

    - name: Cache 3rd party C++ projects
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-meson-cache
        path: 3rdparty/packagecache/

    - name: Setup compile cache to reduce compile time
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}-ccache

    - name: Resolve C++ build dependencies (non-Windows)
      run: >-
        meson setup
        -Duse_boost=false
        build/
      if: startsWith(matrix.os, 'window') == false

    - name: Resolve C++ build dependencies (msvc toolchain)
      run: >-
        meson setup
        -Darmadillo-code:lapack=none
        -Duse_boost=false
        -Duse_eigen=true
        build/
      #run: >-
      #  meson setup
      #  --vsenv
      #  -Darmadillo-code:lapack=none
      #  -Duse_eigen=true
      #  build/
      if: startsWith(matrix.os, 'window') == true

    - name: Build everything
      #run: meson compile -C build/
      run: ninja -C build/ all

    - name: Test everything
      #run: meson test -C build/
      run: ninja -C build/ test
